@model TweetViewModel

@{
    ViewData["Title"] = "Tweet";

    int tagIndex = 0;
    bool liked = Model.Tweet.UserLikes.Any(u => u.UserName == User.Identity.Name);
    bool retweeted = Model.Tweet.Retweets.Any(r => r.RetweetedBy.UserName == User.Identity.Name);
}

@section Styles{
    <link rel="stylesheet" href="~/css/tweet/tweet_styles.css" />
}

<section class="tweets-sec">
    <div class="page-heading">
            <a id="back-link" href="#">
            <i class="fa-solid fa-arrow-left"></i>
            <span>Back</span>
        </a>
        <h1>Tweet</h1>
    </div>

    <div class="tweet-list">

        <article id="current-tweet" tweet-id="@Model.Tweet.Id" class="tweet">
            <div class="tweet-header">
                <a class="@(Model.Tweet.Author.UserName != User.Identity.Name ? "w-100" : "")" 
                    href="@Url.Action("Profile", "User", new {Id = Model.Tweet.Author.UserName })">

                    <img src="~/content/images/@Model.Tweet.Author.ProfilePic">
                    <div>
                        <p class="user-name">@Model.Tweet.Author.FirstName @Model.Tweet.Author.LastName</p>
                        <p>@@@Model.Tweet.Author.UserName</p>
                    </div>

                </a>

                @if (Model.Tweet.Author.UserName == User.Identity.Name)
                {
                    <div class="ms-auto">
                        <button class="more-btn" data-bs-toggle="dropdown">
                            <i class="fa-solid fa-ellipsis"></i>
                        </button>
                        <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton1">
                            <li><a class="dropdown-item" href="#">Action</a></li>
                            <li><button class="dropdown-item">Another action</button></li>
                            <li><a class="dropdown-item" href="#">Something else here</a></li>
                        </ul>
                    </div>
                }
                
            </div>
            <div class="cr-tweet-content">
                <p>@Model.Tweet.TextContent</p>

                @if (Model.Tweet.Image is not null)
                {
                    <div class="img-cont">
                        <img src="~/content/images/tweets/@Model.Tweet.Image">
                    </div>
                }
            </div>
            <p class="time-posted">@Model.Tweet.CreatedAt.ToString("hh:mm tt") · @Model.Tweet.CreatedAt.ToString("MMM, d yyyy")</p>
            <div class="stats">
                <span class="stat-count">@Model.Tweet.UserLikes.Count <span>likes</span></span>
                <span class="stat-count">@Model.Tweet.Retweets.Count <span>retweets</span></span>
            </div>
            <div class="reactions">
                <button id="comments" class="stat comments-stat">
                    <i class="fa-regular fa-comment"></i>
                    @Model.Comments.Count
                </button>

                @if (Model.Tweet.Author.UserName != User.Identity.Name)
                {
                    <button id="retweets" class="stat retweets-stat @(retweeted ? "retweeted" : "")">
                        <i class="fa-solid fa-retweet"></i>
                        @Model.Tweet.Retweets.Count
                    </button>
                }

                <button id="likes" class="stat likes-stat @(liked ? "liked" : "")">
                    <i class="fa-@(liked ? "solid" : "regular") fa-heart"></i>
                    @Model.Tweet.UserLikes.Count
                </button>
            </div>
        </article>

        <div id="reply-box" class="reply-input-box mb-4">
            <input id="reply-input" placeholder="Your reply..." type="text">
            <button id="reply-btn">Reply</button>
        </div>

        <article id="reply-sample" class="tweet tweet-reply d-none">
            <div class="main-tweet">
                <div class="left-profile">
                    <a href="@Url.Action("Profile", "User", new { Id = User.Identity.Name })">
                        <img class="prf-pic" src="~/content/images/@Model.CurrentUser.ProfilePic">
                    </a>
                </div>

                <div class="right-content">
                    <div class="user-identity">
                        <a href="@Url.Action("Profile", "User", new { Id = User.Identity.Name })">
                            @Model.CurrentUser.FirstName @Model.CurrentUser.LastName
                        </a>
                        <p>
                            @@@Model.CurrentUser.UserName
                        </p>

                        <button class="delete-reply-btn ms-auto">
                            <i class="fa-solid fa-trash-can"></i>
                        </button>

                    </div>
                    <div class="text-content"></div>

                    <div class="reactions">
                        <button class="stat likes-stat comment-like">
                            <i class="fa-regular fa-heart"></i>0
                        </button>
                    </div>

                </div>
            </div>
        </article>

        @foreach (var comment in Model.Comments)
        {

            bool likedComment = comment.Likes.Any(l => l.UserName == User.Identity.Name);

            <article id="@comment.Id" class="tweet tweet-reply">
                <div class="main-tweet">
                    <div class="left-profile">
                        <a href="@Url.Action("Profile", "User", new { Id = comment.Author.UserName })">
                            <img class="prf-pic" src="~/content/images/@comment.Author.ProfilePic">
                        </a>
                    </div>

                    <div class="right-content">
                        <div class="user-identity">
                            <a href="@Url.Action("Profile", "User", new { Id = comment.Author.UserName })">
                                @comment.Author.FirstName @comment.Author.LastName
                            </a>
                            <p>@@@comment.Author.UserName</p>
                            <span>·</span>
                            <p>@comment.CreatedAt.ToString("dd.MM.yy")</p>

                            @if (comment.Author.UserName == User.Identity.Name)
                            {
                                <button class="delete-reply-btn ms-auto">
                                    <i class="fa-solid fa-trash-can"></i>
                                </button>
                            }

                        </div>
                        <div class="text-content">
                            @comment.TextContent
                        </div>

                        <div class="reactions">
                            <button class="stat likes-stat comment-like @(likedComment ? "liked" : "")">
                                <i class="fa-@(likedComment ? "solid" : "regular") fa-heart"></i>@comment.Likes.Count
                            </button>
                        </div>

                    </div>
                </div>
            </article>
        }

        
    </div>

</section>

<section class="right-sec">

    <div class="trending">
        <h3>Tags</h3>

        @foreach (var tag in Model.Tags)
        {
            tagIndex++;

            <a href="@Url.Action("One", "Tag", new {Id = tag.TagName})">@tagIndex. @tag.TagName</a>
        }
    </div>
</section>

@section Scripts{
    <script src="~/js/tweet_page/tweet_management.js"></script>
    <script src="~/js/tweet_page/comments.js"></script>
}