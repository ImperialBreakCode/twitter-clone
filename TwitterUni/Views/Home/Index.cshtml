@inject SignInManager<User> signInManager

@model HomeViewModel

@{
    ViewData["Title"] = "Home";
    bool isSignedIn = signInManager.IsSignedIn(User);
}

@section Styles{
    <link rel="stylesheet" href="~/css/home/style.css">
}

<section class="tweets-sec">

    <div class="page-heading">
        <h1 class="@(isSignedIn ? "" : "mb-3")">Home</h1>

        @if (isSignedIn)
        {
            <div class="home-nav-btn">
                <a asp-controller="Home" asp-action="Index" class="@Html.IsActive("Home", "Index", "nv-active")">For you</a>
                <a asp-action="Following" asp-controller="Home" class="@Html.IsActive("Home", "Following", "nv-active")">Following</a>
            </div>
        }
        
    </div>

    <div class="tweet-list">

        @foreach (var tweet in Model.Tweets)
        {
            @Html.Partial("_TweetPartial", tweet);
        }

    </div>

</section>

<section class="right-sec">

    @if (Model.Tags.Count != 0)
    {
        @Html.Partial("_TrendingPartial", Model.Tags)
    }

    @if (isSignedIn && Model.Users.Count > 1)
    {
        @Html.Partial("_ProfileBoxPartial", Model.Users)
    }
    
</section>

@section Scripts{
    <script src="~/js/tweet_list.js"></script>
}
